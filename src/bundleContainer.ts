
import { Base64 } from 'js-base64';
const bundle = '!function(e){var t={};function n(r){if(t[r])return t[r].exports;var a=t[r]={i:r,l:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.l=!0,a.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)n.d(r,a,function(t){return e[t]}.bind(null,a));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=32)}([function(e,t){e.exports=React},function(e,t){e.exports=function(e){return e&&e.__esModule?e:{default:e}}},function(e,t){function n(t){return e.exports=n=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},n(t)}e.exports=n},function(e,t,n){e.exports=n(36)()},function(e,t){e.exports=function(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}},function(e,t){e.exports=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}},function(e,t,n){var r=n(18),a=n(7);e.exports=function(e,t){return!t||"object"!==r(t)&&"function"!=typeof t?a(e):t}},function(e,t){e.exports=function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}},function(e,t,n){var r=n(19);e.exports=function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&r(e,t)}},function(e,t,n){var r=n(18);function a(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return a=function(){return e},e}e.exports=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==r(e)&&"function"!=typeof e)return{default:e};var t=a();if(t&&t.has(e))return t.get(e);var n={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if(Object.prototype.hasOwnProperty.call(e,i)){var u=o?Object.getOwnPropertyDescriptor(e,i):null;u&&(u.get||u.set)?Object.defineProperty(n,i,u):n[i]=e[i]}return n.default=e,t&&t.set(e,n),n}},function(e,t){function n(){return e.exports=n=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},n.apply(this,arguments)}e.exports=n},function(e,t){function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}e.exports=function(e,t,r){return t&&n(e.prototype,t),r&&n(e,r),e}},function(e,t,n){"use strict";var r=n(1);Object.defineProperty(t,"__esModule",{value:!0}),t.loadFromFile=t.isCancelException=t.makePageCallback=t.cancelRunningTask=t.makeCancellable=t.displayCORSWarning=t.errorOnDev=t.warnOnDev=t.getPixelRatio=t.callIfDefined=t.dataURItoUint8Array=t.isDataURI=t.isFile=t.isBlob=t.isArrayBuffer=t.isString=t.isProvided=t.isDefined=t.isProduction=t.isLocalFileSystem=t.isBrowser=void 0;var a=r(n(5)),o=r(n(6)),i=r(n(2)),u=r(n(8)),c=r(n(40)),s="undefined"!=typeof window;t.isBrowser=s;var l=s&&"file:"===window.location.protocol;t.isLocalFileSystem=l;t.isProduction=!0;var f=function(e){return void 0!==e};t.isDefined=f;t.isProvided=function(e){return f(e)&&null!==e};var d=function(e){return"string"==typeof e};t.isString=d;t.isArrayBuffer=function(e){return e instanceof ArrayBuffer};t.isBlob=function(e){if(!s)throw new Error("Attempted to check if a variable is a Blob on a non-browser environment.");return e instanceof Blob};t.isFile=function(e){if(!s)throw new Error("Attempted to check if a variable is a File on a non-browser environment.");return e instanceof File};var p=function(e){return d(e)&&/^data:/.test(e)};t.isDataURI=p;t.dataURItoUint8Array=function(e){if(!p(e))throw new Error("dataURItoUint8Array was provided with an argument which is not a valid data URI.");var t;t=e.split(",")[0].indexOf("base64")>=0?atob(e.split(",")[1]):unescape(e.split(",")[1]);for(var n=new Uint8Array(t.length),r=0;r<t.length;r+=1)n[r]=t.charCodeAt(r);return n};t.callIfDefined=function(e){if(e&&"function"==typeof e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];e.apply(void 0,n)}};t.getPixelRatio=function(){return s&&window.devicePixelRatio||1};var h=function(e){},v=function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return h.apply(void 0,["warn"].concat(t))};t.warnOnDev=v;t.errorOnDev=function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return h.apply(void 0,["error"].concat(t))};t.displayCORSWarning=function(){l&&v("Loading PDF as base64 strings/URLs might not work on protocols other than HTTP/HTTPS. On Google Chrome, you can use --allow-file-access-from-files flag for debugging purposes.")};var g=function(e){function t(e,n){var r;return(0,a.default)(this,t),(r=(0,o.default)(this,(0,i.default)(t).call(this,e,n))).name="PromiseCancelledException",r.message=e,r.type=n,r}return(0,u.default)(t,e),t}((0,c.default)(Error));t.makeCancellable=function(e){var t=!1;return{promise:new Promise((function(n,r){e.then((function(){return t?r(new g("Promise cancelled")):n.apply(void 0,arguments)}),(function(e){return r(t?new g("Promise cancelled"):e)}))})),cancel:function(){t=!0}}};t.cancelRunningTask=function(e){e&&e.cancel&&e.cancel()};t.makePageCallback=function(e,t){return Object.defineProperty(e,"width",{get:function(){return this.view[2]*t},configurable:!0}),Object.defineProperty(e,"height",{get:function(){return this.view[3]*t},configurable:!0}),Object.defineProperty(e,"originalWidth",{get:function(){return this.view[2]},configurable:!0}),Object.defineProperty(e,"originalHeight",{get:function(){return this.view[3]},configurable:!0}),e};t.isCancelException=function(e){return"RenderingCancelledException"===e.name||"PromiseCancelledException"===e.name};t.loadFromFile=function(e){return new Promise((function(t,n){var r=new FileReader;return r.onload=function(){return t(new Uint8Array(r.result))},r.onerror=function(e){switch(e.target.error.code){case e.target.error.NOT_FOUND_ERR:return n(new Error("Error while reading a file: File not found."));case e.target.error.NOT_READABLE_ERR:return n(new Error("Error while reading a file: File not readable."));case e.target.error.SECURITY_ERR:return n(new Error("Error while reading a file: Security error."));case e.target.error.ABORT_ERR:return n(new Error("Error while reading a file: Aborted."));default:return n(new Error("Error while reading a file."))}},r.readAsArrayBuffer(e),null}))}},function(e,t,n){"use strict";var r=n(1);Object.defineProperty(t,"__esModule",{value:!0}),t.isRotate=t.isRenderMode=t.isPdf=t.isPageNumber=t.isPageIndex=t.isPage=t.isLinkTarget=t.isLinkService=t.isFile=t.isClassName=t.eventsProps=void 0;var a=r(n(18)),o=r(n(44)),i=r(n(3)),u=r(n(48)),c=n(20),s=n(12),l=r(n(26)),f=(0,u.default)((function(){var e={};return[].concat((0,o.default)(c.mouseEvents),(0,o.default)(c.touchEvents),(0,o.default)(c.keyboardEvents)).forEach((function(t){e[t]=i.default.func})),e}));t.eventsProps=f;var d=[i.default.string,i.default.instanceOf(ArrayBuffer),i.default.shape({data:i.default.object,httpHeaders:i.default.object,range:i.default.object,url:i.default.string,withCredentials:i.default.bool})];"undefined"!=typeof File&&d.push(i.default.instanceOf(File)),"undefined"!=typeof Blob&&d.push(i.default.instanceOf(Blob));var p=i.default.oneOfType([i.default.string,i.default.arrayOf(i.default.string)]);t.isClassName=p;var h=i.default.oneOfType(d);t.isFile=h;var v=i.default.instanceOf(l.default);t.isLinkService=v;var g=i.default.oneOf(["_self","_blank","_parent","_top"]);t.isLinkTarget=g;var m=i.default.shape({_transport:i.default.shape({fontLoader:i.default.object.isRequired}).isRequired,commonObjs:i.default.shape({_objs:i.default.object.isRequired}).isRequired,getAnnotations:i.default.func.isRequired,getTextContent:i.default.func.isRequired,getViewport:i.default.func.isRequired,render:i.default.func.isRequired});t.isPage=m;t.isPageIndex=function(e,t,n){var r=e[t],o=e.pageNumber,i=e.pdf;if(!(0,s.isDefined)(i))return null;if((0,s.isDefined)(r)){if("number"!=typeof r)return new Error("`".concat(t,"` of type `").concat((0,a.default)(r),"` supplied to `").concat(n,"`, expected `number`."));if(r<0)return new Error("Expected `".concat(t,"` to be greater or equal to 0."));var u=i.numPages;if(r+1>u)return new Error("Expected `".concat(t,"` to be less or equal to ").concat(u-1,"."))}else if(!(0,s.isDefined)(o))return new Error("`".concat(t,"` not supplied. Either pageIndex or pageNumber must be supplied to `").concat(n,"`."));return null};t.isPageNumber=function(e,t,n){var r=e[t],o=e.pageIndex,i=e.pdf;if(!(0,s.isDefined)(i))return null;if((0,s.isDefined)(r)){if("number"!=typeof r)return new Error("`".concat(t,"` of type `").concat((0,a.default)(r),"` supplied to `").concat(n,"`, expected `number`."));if(r<1)return new Error("Expected `".concat(t,"` to be greater or equal to 1."));var u=i.numPages;if(r>u)return new Error("Expected `".concat(t,"` to be less or equal to ").concat(u,"."))}else if(!(0,s.isDefined)(o))return new Error("`".concat(t,"` not supplied. Either pageIndex or pageNumber must be supplied to `").concat(n,"`."));return null};var y=i.default.oneOfType([i.default.shape({getDestination:i.default.func.isRequired,getOutline:i.default.func.isRequired,getPage:i.default.func.isRequired,numPages:i.default.number.isRequired}),i.default.bool]);t.isPdf=y;var b=i.default.oneOf(["canvas","none","svg"]);t.isRenderMode=b;var w=i.default.oneOf([0,90,180,270]);t.isRotate=w},function(e,t,n){(function(t){for(var r=n(59),a="undefined"==typeof window?t:window,o=["moz","webkit"],i="AnimationFrame",u=a["request"+i],c=a["cancel"+i]||a["cancelRequest"+i],s=0;!u&&s<o.length;s++)u=a[o[s]+"Request"+i],c=a[o[s]+"Cancel"+i]||a[o[s]+"CancelRequest"+i];if(!u||!c){var l=0,f=0,d=[];u=function(e){if(0===d.length){var t=r(),n=Math.max(0,1e3/60-(t-l));l=n+t,setTimeout((function(){var e=d.slice(0);d.length=0;for(var t=0;t<e.length;t++)if(!e[t].cancelled)try{e[t].callback(l)}catch(e){setTimeout((function(){throw e}),0)}}),Math.round(n))}return d.push({handle:++f,callback:e,cancelled:!1}),f},c=function(e){for(var t=0;t<d.length;t++)d[t].handle===e&&(d[t].cancelled=!0)}}e.exports=function(e){return u.call(a,e)},e.exports.cancel=function(){c.apply(a,arguments)},e.exports.polyfill=function(e){e||(e=a),e.requestAnimationFrame=u,e.cancelAnimationFrame=c}}).call(this,n(58))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=(0,n(0).createContext)(null);t.default=r},function(e,t,n){e.exports=n(35)},function(e,t){function n(e,t,n,r,a,o,i){try{var u=e[o](i),c=u.value}catch(e){return void n(e)}u.done?t(c):Promise.resolve(c).then(r,a)}e.exports=function(e){return function(){var t=this,r=arguments;return new Promise((function(a,o){var i=e.apply(t,r);function u(e){n(i,a,o,u,c,"next",e)}function c(e){n(i,a,o,u,c,"throw",e)}u(void 0)}))}}},function(e,t){function n(t){return"function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?e.exports=n=function(e){return typeof e}:e.exports=n=function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(t)}e.exports=n},function(e,t){function n(t,r){return e.exports=n=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},n(t,r)}e.exports=n},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=t.focusEvents=t.keyboardEvents=t.touchEvents=t.mouseEvents=void 0;var r=["onClick","onContextMenu","onDoubleClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp"];t.mouseEvents=r;var a=["onTouchCancel","onTouchEnd","onTouchMove","onTouchStart"];t.touchEvents=a;var o=["onKeyDown","onKeyPress","onKeyUp"];t.keyboardEvents=o;var i=["onFocus","onBlur"];t.focusEvents=i;var u=function(e,t){var n={};return[].concat(r,a,o,i).forEach((function(r){e[r]&&(n[r]=function(n){return t?e[r](n,t(r)):e[r](n)})})),n};t.default=u},function(e,t){e.exports=pdfjsLib},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=(0,n(0).createContext)(null);t.default=r},function(e,t,n){var r=n(4);e.exports=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?Object(arguments[t]):{},a=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),a.forEach((function(t){r(e,t,n[t])}))}return e}},function(e,t,n){"use strict";function r(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.reduce((function(e,t){return"string"==typeof t||t instanceof Array?e.concat(t):e}),[]).filter(Boolean).join(" ")}n.r(t),n.d(t,"default",(function(){return r}))},function(e,t,n){"use strict";var r=n(1);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var a=r(n(0)),o=r(n(3)),i=function(e){var t=e.children,n=e.type;return a.default.createElement("div",{className:"react-pdf__message react-pdf__message--".concat(n)},t)};i.propTypes={children:o.default.node,type:o.default.oneOf(["error","loading","no-data"]).isRequired};var u=i;t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=n(38).PDFLinkService;t.default=r},function(e,t){e.exports=function(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}},function(e,t,n){var r=n(27);e.exports=function(e,t){if(e){if("string"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(e,t):void 0}}},function(e,t){e.exports=ReactDOM},function(e,t,n){"use strict";var r=n(9),a=n(1);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=a(n(10)),i=a(n(33)),u=a(n(18)),c=a(n(16)),s=a(n(23)),l=a(n(17)),f=a(n(5)),d=a(n(11)),p=a(n(6)),h=a(n(2)),v=a(n(8)),g=a(n(7)),m=a(n(4)),y=r(n(0)),b=a(n(3)),w=a(n(20)),x=a(n(24)),E=r(n(21)),_=a(n(22)),k=a(n(25)),P=a(n(26)),S=a(n(39)),R=n(12),O=n(13),L=function(e){function t(){var e,n;(0,f.default)(this,t);for(var r=arguments.length,a=new Array(r),o=0;o<r;o++)a[o]=arguments[o];return n=(0,p.default)(this,(e=(0,h.default)(t)).call.apply(e,[this].concat(a))),(0,m.default)((0,g.default)((0,g.default)(n)),"state",{pdf:null}),(0,m.default)((0,g.default)((0,g.default)(n)),"viewer",{scrollPageIntoView:function(e){var t=e.pageNumber,r=n.props.onItemClick;if(r)r({pageNumber:t});else{var a=n.pages[t-1];a?a.scrollIntoView():(0,R.warnOnDev)("Warning: An internal link leading to page ".concat(t," was clicked, but neither <Document> was provided with onItemClick nor it was able to find the page within itself. Either provide onItemClick to <Document> and handle navigating by yourself or ensure that all pages are rendered within <Document>."))}}}),(0,m.default)((0,g.default)((0,g.default)(n)),"linkService",new P.default),(0,m.default)((0,g.default)((0,g.default)(n)),"loadDocument",(0,l.default)(c.default.mark((function e(){var t,r,a,o,i,u,l,f;return c.default.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t=null,e.prev=1,e.next=4,n.findDocumentSource();case 4:t=e.sent,n.onSourceSuccess(),e.next=11;break;case 8:e.prev=8,e.t0=e.catch(1),n.onSourceError(e.t0);case 11:if(t){e.next=13;break}return e.abrupt("return");case 13:return n.setState((function(e){return e.pdf?{pdf:null}:null})),r=n.props,a=r.options,o=r.onLoadProgress,i=r.onPassword,e.prev=15,(0,R.cancelRunningTask)(n.runningTask),(u=E.default.getDocument((0,s.default)({},t,a))).onPassword=i,o&&(u.onProgress=o),l=(0,R.makeCancellable)(u.promise),n.runningTask=l,e.next=24,l.promise;case 24:f=e.sent,n.setState((function(e){return e.pdf&&e.pdf.fingerprint===f.fingerprint?null:{pdf:f}}),n.onLoadSuccess),e.next=31;break;case 28:e.prev=28,e.t1=e.catch(15),n.onLoadError(e.t1);case 31:case"end":return e.stop()}}),e,this,[[1,8],[15,28]])})))),(0,m.default)((0,g.default)((0,g.default)(n)),"setupLinkService",(function(){n.linkService.setViewer(n.viewer);var e=(0,g.default)((0,g.default)(n));Object.defineProperty(n.linkService,"externalLinkTarget",{get:function(){switch(e.props.externalLinkTarget){case"_self":return 1;case"_blank":return 2;case"_parent":return 3;case"_top":return 4;default:return 0}}})})),(0,m.default)((0,g.default)((0,g.default)(n)),"onSourceSuccess",(function(){var e=n.props.onSourceSuccess;(0,R.callIfDefined)(e)})),(0,m.default)((0,g.default)((0,g.default)(n)),"onSourceError",(function(e){if(!(0,R.isCancelException)(e)){(0,R.errorOnDev)(e);var t=n.props.onSourceError;(0,R.callIfDefined)(t,e)}})),(0,m.default)((0,g.default)((0,g.default)(n)),"onLoadSuccess",(function(){var e=n.props.onLoadSuccess,t=n.state.pdf;(0,R.callIfDefined)(e,t),n.pages=new Array(t.numPages),n.linkService.setDocument(t)})),(0,m.default)((0,g.default)((0,g.default)(n)),"onLoadError",(function(e){if(!(0,R.isCancelException)(e)){n.setState({pdf:!1}),(0,R.errorOnDev)(e);var t=n.props.onLoadError;(0,R.callIfDefined)(t,e)}})),(0,m.default)((0,g.default)((0,g.default)(n)),"findDocumentSource",(0,l.default)(c.default.mark((function e(){var t,r,a,o,l;return c.default.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(t=n.props.file){e.next=3;break}return e.abrupt("return",null);case 3:if("string"!=typeof t){e.next=9;break}if(!(0,R.isDataURI)(t)){e.next=7;break}return r=(0,R.dataURItoUint8Array)(t),e.abrupt("return",{data:r});case 7:return(0,R.displayCORSWarning)(),e.abrupt("return",{url:t});case 9:if(!(t instanceof E.PDFDataRangeTransport)){e.next=11;break}return e.abrupt("return",{range:t});case 11:if(!(0,R.isArrayBuffer)(t)){e.next=13;break}return e.abrupt("return",{data:t});case 13:if(!R.isBrowser){e.next=19;break}if(!(0,R.isBlob)(t)&&!(0,R.isFile)(t)){e.next=19;break}return e.next=17,(0,R.loadFromFile)(t);case 17:return e.t0=e.sent,e.abrupt("return",{data:e.t0});case 19:if("object"===(0,u.default)(t)){e.next=21;break}throw new Error("Invalid parameter in file, need either Uint8Array, string or a parameter object");case 21:if(t.url||t.data||t.range){e.next=23;break}throw new Error("Invalid parameter object: need either .data, .range or .url");case 23:if("string"!=typeof t.url){e.next=29;break}if(!(0,R.isDataURI)(t.url)){e.next=28;break}return a=t.url,o=(0,i.default)(t,["url"]),l=(0,R.dataURItoUint8Array)(a),e.abrupt("return",(0,s.default)({data:l},o));case 28:(0,R.displayCORSWarning)();case 29:return e.abrupt("return",t);case 30:case"end":return e.stop()}}),e,this)})))),(0,m.default)((0,g.default)((0,g.default)(n)),"registerPage",(function(e,t){n.pages[e]=t})),(0,m.default)((0,g.default)((0,g.default)(n)),"unregisterPage",(function(e){delete n.pages[e]})),n}return(0,v.default)(t,e),(0,d.default)(t,[{key:"componentDidMount",value:function(){this.loadDocument(),this.setupLinkService()}},{key:"componentDidUpdate",value:function(e){this.props.file!==e.file&&this.loadDocument()}},{key:"componentWillUnmount",value:function(){(0,R.cancelRunningTask)(this.runningTask)}},{key:"renderChildren",value:function(){var e=this.props.children;return y.default.createElement(_.default.Provider,{value:this.childContext},e)}},{key:"renderContent",value:function(){var e=this.props.file,t=this.state.pdf;if(!e){var n=this.props.noData;return y.default.createElement(k.default,{type:"no-data"},"function"==typeof n?n():n)}if(null===t){var r=this.props.loading;return y.default.createElement(k.default,{type:"loading"},"function"==typeof r?r():r)}if(!1===t){var a=this.props.error;return y.default.createElement(k.default,{type:"error"},"function"==typeof a?a():a)}return this.renderChildren()}},{key:"render",value:function(){var e=this.props,t=e.className,n=e.inputRef;return y.default.createElement("div",(0,o.default)({className:(0,x.default)("react-pdf__Document",t),ref:n},this.eventProps),this.renderContent())}},{key:"childContext",get:function(){var e=this.linkService,t=this.registerPage,n=this.unregisterPage,r=this.props,a=r.renderMode,o=r.rotate;return{linkService:e,pdf:this.state.pdf,registerPage:t,renderMode:a,rotate:o,unregisterPage:n}}},{key:"eventProps",get:function(){var e=this;return(0,w.default)(this.props,(function(){return e.state.pdf}))}}]),t}(y.PureComponent);t.default=L,L.defaultProps={error:"Failed to load PDF file.",loading:"Loading PDF…",noData:"No PDF file specified.",onPassword:function(e,t){switch(t){case S.default.NEED_PASSWORD:e(prompt("Enter the password to open this PDF file."));break;case S.default.INCORRECT_PASSWORD:e(prompt("Invalid password. Please try again."))}}},L.propTypes=(0,s.default)({children:b.default.node,className:O.isClassName,error:b.default.node,file:R.isFile,inputRef:b.default.func,loading:b.default.node,noData:b.default.node,onItemClick:b.default.func,onLoadError:b.default.func,onLoadProgress:b.default.func,onLoadSuccess:b.default.func,onPassword:b.default.func,onSourceError:b.default.func,onSourceSuccess:b.default.func,rotate:b.default.number},(0,O.eventsProps)())},function(e,t,n){"use strict";var r=n(9),a=n(1);Object.defineProperty(t,"__esModule",{value:!0}),t.default=t.PageInternal=void 0;var o=a(n(23)),i=a(n(10)),u=a(n(16)),c=a(n(17)),s=a(n(5)),l=a(n(11)),f=a(n(6)),d=a(n(2)),p=a(n(8)),h=a(n(7)),v=a(n(4)),g=r(n(0)),m=a(n(3)),y=a(n(20)),b=a(n(24)),w=a(n(22)),x=a(n(15)),E=a(n(25)),_=a(n(49)),k=a(n(50)),P=a(n(51)),S=a(n(57)),R=n(12),O=n(13),L=function(e){function t(){var e,n;(0,s.default)(this,t);for(var r=arguments.length,a=new Array(r),o=0;o<r;o++)a[o]=arguments[o];return n=(0,f.default)(this,(e=(0,d.default)(t)).call.apply(e,[this].concat(a))),(0,v.default)((0,h.default)((0,h.default)(n)),"state",{page:null}),(0,v.default)((0,h.default)((0,h.default)(n)),"onLoadSuccess",(function(){var e=n.props,t=e.onLoadSuccess,r=e.registerPage,a=n.state.page;(0,R.callIfDefined)(t,(0,R.makePageCallback)(a,n.scale)),(0,R.callIfDefined)(r,n.pageIndex,n.ref)})),(0,v.default)((0,h.default)((0,h.default)(n)),"onLoadError",(function(e){if(!(0,R.isCancelException)(e)){(0,R.errorOnDev)(e);var t=n.props.onLoadError;(0,R.callIfDefined)(t,e)}})),(0,v.default)((0,h.default)((0,h.default)(n)),"loadPage",(0,c.default)(u.default.mark((function e(){var t,r,a,o;return u.default.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(t=n.props.pdf,r=n.getPageNumber()){e.next=4;break}return e.abrupt("return");case 4:return n.setState((function(e){return e.page?{page:null}:null})),e.prev=5,a=(0,R.makeCancellable)(t.getPage(r)),n.runningTask=a,e.next=10,a.promise;case 10:o=e.sent,n.setState({page:o},n.onLoadSuccess),e.next=18;break;case 14:e.prev=14,e.t0=e.catch(5),n.setState({page:!1}),n.onLoadError(e.t0);case 18:case"end":return e.stop()}}),e,this,[[5,14]])})))),n}return(0,p.default)(t,e),(0,l.default)(t,[{key:"componentDidMount",value:function(){if(!this.props.pdf)throw new Error("Attempted to load a page, but no document was specified.");this.loadPage()}},{key:"componentDidUpdate",value:function(e){var t=this.props.pdf;if(e.pdf&&t!==e.pdf||this.getPageNumber()!==this.getPageNumber(e)){var n=this.props.unregisterPage;(0,R.callIfDefined)(n,this.getPageIndex(e)),this.loadPage()}}},{key:"componentWillUnmount",value:function(){var e=this.props.unregisterPage;(0,R.callIfDefined)(e,this.pageIndex),(0,R.cancelRunningTask)(this.runningTask)}},{key:"getPageIndex",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.props;return(0,R.isProvided)(e.pageNumber)?e.pageNumber-1:(0,R.isProvided)(e.pageIndex)?e.pageIndex:null}},{key:"getPageNumber",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.props;return(0,R.isProvided)(e.pageNumber)?e.pageNumber:(0,R.isProvided)(e.pageIndex)?e.pageIndex+1:null}},{key:"renderMainLayer",value:function(){switch(this.props.renderMode){case"none":return null;case"svg":return g.default.createElement(k.default,{key:"".concat(this.pageKeyNoScale,"_svg")});case"canvas":default:return g.default.createElement(_.default,{key:"".concat(this.pageKey,"_canvas")})}}},{key:"renderTextLayer",value:function(){var e=this.props.renderTextLayer;return e?g.default.createElement(P.default,{key:"".concat(this.pageKey,"_text")}):null}},{key:"renderAnnotationLayer",value:function(){var e=this.props.renderAnnotationLayer;return e?g.default.createElement(S.default,{key:"".concat(this.pageKey,"_annotations")}):null}},{key:"renderChildren",value:function(){var e=this.props.children;return g.default.createElement(x.default.Provider,{value:this.childContext},this.renderMainLayer(),this.renderTextLayer(),this.renderAnnotationLayer(),e)}},{key:"renderContent",value:function(){var e=this.pageNumber,t=this.props.pdf,n=this.state.page;if(!e){var r=this.props.noData;return g.default.createElement(E.default,{type:"no-data"},"function"==typeof r?r():r)}if(null===t||null===n){var a=this.props.loading;return g.default.createElement(E.default,{type:"loading"},"function"==typeof a?a():a)}if(!1===t||!1===n){var o=this.props.error;return g.default.createElement(E.default,{type:"error"},"function"==typeof o?o():o)}return this.renderChildren()}},{key:"render",value:function(){var e=this,t=this.pageNumber,n=this.props.className;return g.default.createElement("div",(0,i.default)({className:(0,b.default)("react-pdf__Page",n),ref:function(t){var n=e.props.inputRef;n&&n(t),e.ref=t},style:{position:"relative"},"data-page-number":t},this.eventProps),this.renderContent())}},{key:"childContext",get:function(){var e=this.state.page;if(!e)return{};var t=this.props;return{customTextRenderer:t.customTextRenderer,onGetAnnotationsError:t.onGetAnnotationsError,onGetAnnotationsSuccess:t.onGetAnnotationsSuccess,onGetTextError:t.onGetTextError,onGetTextSuccess:t.onGetTextSuccess,onRenderAnnotationLayerError:t.onRenderAnnotationLayerError,onRenderAnnotationLayerSuccess:t.onRenderAnnotationLayerSuccess,onRenderError:t.onRenderError,onRenderSuccess:t.onRenderSuccess,page:e,renderInteractiveForms:t.renderInteractiveForms,rotate:this.rotate,scale:this.scale}}},{key:"pageIndex",get:function(){return this.getPageIndex()}},{key:"pageNumber",get:function(){return this.getPageNumber()}},{key:"rotate",get:function(){var e=this.props.rotate;if((0,R.isProvided)(e))return e;var t=this.state.page;return t?t.rotate:null}},{key:"scale",get:function(){var e=this.state.page;if(!e)return null;var t=this.props,n=t.scale,r=t.width,a=t.height,o=this.rotate,i=1,u=null===n?1:n;if(r||a){var c=e.getViewport({scale:1,rotation:o});i=r?r/c.width:a/c.height}return u*i}},{key:"eventProps",get:function(){var e=this;return(0,y.default)(this.props,(function(){var t=e.state.page;return t?(0,R.makePageCallback)(t,e.scale):t}))}},{key:"pageKey",get:function(){var e=this.state.page;return"".concat(e.pageIndex,"@").concat(this.scale,"/").concat(this.rotate)}},{key:"pageKeyNoScale",get:function(){var e=this.state.page;return"".concat(e.pageIndex,"/").concat(this.rotate)}}]),t}(g.PureComponent);t.PageInternal=L,L.defaultProps={error:"Failed to load the page.",loading:"Loading page…",noData:"No page specified.",renderAnnotationLayer:!0,renderInteractiveForms:!1,renderMode:"canvas",renderTextLayer:!0,scale:1},L.propTypes=(0,o.default)({children:m.default.node,className:O.isClassName,customTextRenderer:m.default.func,error:m.default.node,height:m.default.number,inputRef:m.default.func,loading:m.default.node,noData:m.default.node,onGetTextError:m.default.func,onGetTextSuccess:m.default.func,onLoadError:m.default.func,onLoadSuccess:m.default.func,onRenderError:m.default.func,onRenderSuccess:m.default.func,pageIndex:O.isPageIndex,pageNumber:O.isPageNumber,pdf:O.isPdf,registerPage:m.default.func,renderAnnotationLayer:m.default.bool,renderInteractiveForms:m.default.bool,renderMode:O.isRenderMode,renderTextLayer:m.default.bool,rotate:O.isRotate,scale:m.default.number,unregisterPage:m.default.func,width:m.default.number},(0,O.eventsProps)());var T=g.default.forwardRef((function(e,t){return g.default.createElement(w.default.Consumer,null,(function(n){return g.default.createElement(L,(0,i.default)({ref:t},n,e,{renderAnnotationLayer:void 0!==e.renderAnnotationLayer?e.renderAnnotationLayer:e.renderAnnotations}))}))}));t.default=T},function(e,t,n){e.exports=n(65)},function(e,t,n){var r=n(34);e.exports=function(e,t){if(null==e)return{};var n,a,o=r(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}},function(e,t){e.exports=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}},function(e,t,n){var r=function(e){"use strict";var t=Object.prototype,n=t.hasOwnProperty,r="function"==typeof Symbol?Symbol:{},a=r.iterator||"@@iterator",o=r.asyncIterator||"@@asyncIterator",i=r.toStringTag||"@@toStringTag";function u(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{u({},"")}catch(e){u=function(e,t,n){return e[t]=n}}function c(e,t,n,r){var a=t&&t.prototype instanceof f?t:f,o=Object.create(a.prototype),i=new _(r||[]);return o._invoke=function(e,t,n){var r="suspendedStart";return function(a,o){if("executing"===r)throw new Error("Generator is already running");if("completed"===r){if("throw"===a)throw o;return P()}for(n.method=a,n.arg=o;;){var i=n.delegate;if(i){var u=w(i,n);if(u){if(u===l)continue;return u}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if("suspendedStart"===r)throw r="completed",n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);r="executing";var c=s(e,t,n);if("normal"===c.type){if(r=n.done?"completed":"suspendedYield",c.arg===l)continue;return{value:c.arg,done:n.done}}"throw"===c.type&&(r="completed",n.method="throw",n.arg=c.arg)}}}(e,n,i),o}function s(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}e.wrap=c;var l={};function f(){}function d(){}function p(){}var h={};h[a]=function(){return this};var v=Object.getPrototypeOf,g=v&&v(v(k([])));g&&g!==t&&n.call(g,a)&&(h=g);var m=p.prototype=f.prototype=Object.create(h);function y(e){["next","throw","return"].forEach((function(t){u(e,t,(function(e){return this._invoke(t,e)}))}))}function b(e,t){var r;this._invoke=function(a,o){function i(){return new t((function(r,i){!function r(a,o,i,u){var c=s(e[a],e,o);if("throw"!==c.type){var l=c.arg,f=l.value;return f&&"object"==typeof f&&n.call(f,"__await")?t.resolve(f.__await).then((function(e){r("next",e,i,u)}),(function(e){r("throw",e,i,u)})):t.resolve(f).then((function(e){l.value=e,i(l)}),(function(e){return r("throw",e,i,u)}))}u(c.arg)}(a,o,r,i)}))}return r=r?r.then(i,i):i()}}function w(e,t){var n=e.iterator[t.method];if(void 0===n){if(t.delegate=null,"throw"===t.method){if(e.iterator.return&&(t.method="return",t.arg=void 0,w(e,t),"throw"===t.method))return l;t.method="throw",t.arg=new TypeError("The iterator does not provide a 'throw' method")}return l}var r=s(n,e.iterator,t.arg);if("throw"===r.type)return t.method="throw",t.arg=r.arg,t.delegate=null,l;var a=r.arg;return a?a.done?(t[e.resultName]=a.value,t.next=e.nextLoc,"return"!==t.method&&(t.method="next",t.arg=void 0),t.delegate=null,l):a:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,l)}function x(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function E(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function _(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(x,this),this.reset(!0)}function k(e){if(e){var t=e[a];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var r=-1,o=function t(){for(;++r<e.length;)if(n.call(e,r))return t.value=e[r],t.done=!1,t;return t.value=void 0,t.done=!0,t};return o.next=o}}return{next:P}}function P(){return{value:void 0,done:!0}}return d.prototype=m.constructor=p,p.constructor=d,d.displayName=u(p,i,"GeneratorFunction"),e.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===d||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,p):(e.__proto__=p,u(e,i,"GeneratorFunction")),e.prototype=Object.create(m),e},e.awrap=function(e){return{__await:e}},y(b.prototype),b.prototype[o]=function(){return this},e.AsyncIterator=b,e.async=function(t,n,r,a,o){void 0===o&&(o=Promise);var i=new b(c(t,n,r,a),o);return e.isGeneratorFunction(n)?i:i.next().then((function(e){return e.done?e.value:i.next()}))},y(m),u(m,i,"Generator"),m[a]=function(){return this},m.toString=function(){return"[object Generator]"},e.keys=function(e){var t=[];for(var n in e)t.push(n);return t.reverse(),function n(){for(;t.length;){var r=t.pop();if(r in e)return n.value=r,n.done=!1,n}return n.done=!0,n}},e.values=k,_.prototype={constructor:_,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(E),!e)for(var t in this)"t"===t.charAt(0)&&n.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=void 0)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var t=this;function r(n,r){return i.type="throw",i.arg=e,t.next=n,r&&(t.method="next",t.arg=void 0),!!r}for(var a=this.tryEntries.length-1;a>=0;--a){var o=this.tryEntries[a],i=o.completion;if("root"===o.tryLoc)return r("end");if(o.tryLoc<=this.prev){var u=n.call(o,"catchLoc"),c=n.call(o,"finallyLoc");if(u&&c){if(this.prev<o.catchLoc)return r(o.catchLoc,!0);if(this.prev<o.finallyLoc)return r(o.finallyLoc)}else if(u){if(this.prev<o.catchLoc)return r(o.catchLoc,!0)}else{if(!c)throw new Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return r(o.finallyLoc)}}}},abrupt:function(e,t){for(var r=this.tryEntries.length-1;r>=0;--r){var a=this.tryEntries[r];if(a.tryLoc<=this.prev&&n.call(a,"finallyLoc")&&this.prev<a.finallyLoc){var o=a;break}}o&&("break"===e||"continue"===e)&&o.tryLoc<=t&&t<=o.finallyLoc&&(o=null);var i=o?o.completion:{};return i.type=e,i.arg=t,o?(this.method="next",this.next=o.finallyLoc,l):this.complete(i)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),l},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),E(n),l}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var r=n.completion;if("throw"===r.type){var a=r.arg;E(n)}return a}}throw new Error("illegal catch attempt")},delegateYield:function(e,t,n){return this.delegate={iterator:k(e),resultName:t,nextLoc:n},"next"===this.method&&(this.arg=void 0),l}},e}(e.exports);try{regeneratorRuntime=r}catch(e){Function("r","regeneratorRuntime = r")(r)}},function(e,t,n){"use strict";var r=n(37);function a(){}function o(){}o.resetWarningCache=a,e.exports=function(){function e(e,t,n,a,o,i){if(i!==r){var u=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw u.name="Invariant Violation",u}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:o,resetWarningCache:a};return n.PropTypes=n,n}},function(e,t,n){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},function(e,t){e.exports=pdfjsViewer},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r={NEED_PASSWORD:1,INCORRECT_PASSWORD:2};t.default=r},function(e,t,n){var r=n(2),a=n(19),o=n(41),i=n(42);function u(t){var n="function"==typeof Map?new Map:void 0;return e.exports=u=function(e){if(null===e||!o(e))return e;if("function"!=typeof e)throw new TypeError("Super expression must either be null or a function");if(void 0!==n){if(n.has(e))return n.get(e);n.set(e,t)}function t(){return i(e,arguments,r(this).constructor)}return t.prototype=Object.create(e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),a(t,e)},u(t)}e.exports=u},function(e,t){e.exports=function(e){return-1!==Function.toString.call(e).indexOf("[native code]")}},function(e,t,n){var r=n(19),a=n(43);function o(t,n,i){return a()?e.exports=o=Reflect.construct:e.exports=o=function(e,t,n){var a=[null];a.push.apply(a,t);var o=new(Function.bind.apply(e,a));return n&&r(o,n.prototype),o},o.apply(null,arguments)}e.exports=o},function(e,t){e.exports=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}},function(e,t,n){var r=n(45),a=n(46),o=n(28),i=n(47);e.exports=function(e){return r(e)||a(e)||o(e)||i()}},function(e,t,n){var r=n(27);e.exports=function(e){if(Array.isArray(e))return r(e)}},function(e,t){e.exports=function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}},function(e,t){e.exports=function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}},function(e,t){var n=/^\s+|\s+$/g,r=/^[-+]0x[0-9a-f]+$/i,a=/^0b[01]+$/i,o=/^0o[0-7]+$/i,i=parseInt,u=Object.prototype.toString;function c(e,t){var c;if("function"!=typeof t)throw new TypeError("Expected a function");return e=function(e){var t=function(e){if(!e)return 0===e?e:0;if((e=function(e){if("number"==typeof e)return e;if(function(e){return"symbol"==typeof e||function(e){return!!e&&"object"==typeof e}(e)&&"[object Symbol]"==u.call(e)}(e))return NaN;if(s(e)){var t="function"==typeof e.valueOf?e.valueOf():e;e=s(t)?t+"":t}if("string"!=typeof e)return 0===e?e:+e;e=e.replace(n,"");var c=a.test(e);return c||o.test(e)?i(e.slice(2),c?2:8):r.test(e)?NaN:+e}(e))===1/0||e===-1/0){return 17976931348623157e292*(e<0?-1:1)}return e==e?e:0}(e),c=t%1;return t==t?c?t-c:t:0}(e),function(){return--e>0&&(c=t.apply(this,arguments)),e<=1&&(t=void 0),c}}function s(e){var t=typeof e;return!!e&&("object"==t||"function"==t)}e.exports=function(e){return c(2,e)}},function(e,t,n){"use strict";var r=n(9),a=n(1);Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return p.default.createElement(v.default.Consumer,null,(function(t){return p.default.createElement(y,(0,o.default)({},t,e))}))},t.PageCanvasInternal=void 0;var o=a(n(10)),i=a(n(5)),u=a(n(11)),c=a(n(6)),s=a(n(2)),l=a(n(8)),f=a(n(7)),d=a(n(4)),p=r(n(0)),h=a(n(3)),v=a(n(15)),g=n(12),m=n(13),y=function(e){function t(){var e,n;(0,i.default)(this,t);for(var r=arguments.length,a=new Array(r),o=0;o<r;o++)a[o]=arguments[o];return n=(0,c.default)(this,(e=(0,s.default)(t)).call.apply(e,[this].concat(a))),(0,d.default)((0,f.default)((0,f.default)(n)),"onRenderSuccess",(function(){n.renderer=null;var e=n.props,t=e.onRenderSuccess,r=e.page,a=e.scale;(0,g.callIfDefined)(t,(0,g.makePageCallback)(r,a))})),(0,d.default)((0,f.default)((0,f.default)(n)),"onRenderError",(function(e){if(!(0,g.isCancelException)(e)){(0,g.errorOnDev)(e);var t=n.props.onRenderError;(0,g.callIfDefined)(t,e)}})),(0,d.default)((0,f.default)((0,f.default)(n)),"drawPageOnCanvas",(function(){var e=(0,f.default)((0,f.default)(n)).canvasLayer;if(!e)return null;var t=(0,f.default)((0,f.default)(n)),r=t.renderViewport,a=t.viewport,o=n.props,i=o.page,u=o.renderInteractiveForms;e.width=r.width,e.height=r.height,e.style.width="".concat(Math.floor(a.width),"px"),e.style.height="".concat(Math.floor(a.height),"px");var c={get canvasContext(){return e.getContext("2d")},viewport:r,renderInteractiveForms:u};return n.cancelRenderingTask(),n.renderer=i.render(c),n.renderer.promise.then(n.onRenderSuccess).catch(n.onRenderError)})),n}return(0,l.default)(t,e),(0,u.default)(t,[{key:"componentDidMount",value:function(){this.drawPageOnCanvas()}},{key:"componentDidUpdate",value:function(e){var t=this.props,n=t.page;t.renderInteractiveForms!==e.renderInteractiveForms&&(n.cleanup(),this.drawPageOnCanvas())}},{key:"componentWillUnmount",value:function(){this.cancelRenderingTask(),this.canvasLayer&&(this.canvasLayer.width=0,this.canvasLayer.height=0,this.canvasLayer=null)}},{key:"cancelRenderingTask",value:function(){this.renderer&&this.renderer._internalRenderTask.running&&this.renderer._internalRenderTask.cancel()}},{key:"render",value:function(){var e=this;return p.default.createElement("canvas",{className:"react-pdf__Page__canvas",style:{display:"block",userSelect:"none"},ref:function(t){e.canvasLayer=t}})}},{key:"renderViewport",get:function(){var e=this.props,t=e.page,n=e.rotate,r=e.scale,a=(0,g.getPixelRatio)();return t.getViewport({scale:r*a,rotation:n})}},{key:"viewport",get:function(){var e=this.props,t=e.page,n=e.rotate,r=e.scale;return t.getViewport({scale:r,rotation:n})}}]),t}(p.PureComponent);t.PageCanvasInternal=y,y.propTypes={onRenderError:h.default.func,onRenderSuccess:h.default.func,page:m.isPage.isRequired,renderInteractiveForms:h.default.bool,rotate:m.isRotate,scale:h.default.number}},function(e,t,n){"use strict";var r=n(9),a=n(1);Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return p.default.createElement(g.default.Consumer,null,(function(t){return p.default.createElement(b,(0,o.default)({},t,e))}))},t.PageSVGInternal=void 0;var o=a(n(10)),i=a(n(5)),u=a(n(11)),c=a(n(6)),s=a(n(2)),l=a(n(8)),f=a(n(7)),d=a(n(4)),p=r(n(0)),h=a(n(3)),v=a(n(21)),g=a(n(15)),m=n(12),y=n(13),b=function(e){function t(){var e,n;(0,i.default)(this,t);for(var r=arguments.length,a=new Array(r),o=0;o<r;o++)a[o]=arguments[o];return n=(0,c.default)(this,(e=(0,s.default)(t)).call.apply(e,[this].concat(a))),(0,d.default)((0,f.default)((0,f.default)(n)),"state",{svg:null}),(0,d.default)((0,f.default)((0,f.default)(n)),"onRenderSuccess",(function(){n.renderer=null;var e=n.props,t=e.onRenderSuccess,r=e.page,a=e.scale;(0,m.callIfDefined)(t,(0,m.makePageCallback)(r,a))})),(0,d.default)((0,f.default)((0,f.default)(n)),"onRenderError",(function(e){if(!(0,m.isCancelException)(e)){(0,m.errorOnDev)(e);var t=n.props.onRenderError;(0,m.callIfDefined)(t,e)}})),(0,d.default)((0,f.default)((0,f.default)(n)),"renderSVG",(function(){var e=n.props.page;return n.renderer=e.getOperatorList(),n.renderer.then((function(t){var r=new v.default.SVGGraphics(e.commonObjs,e.objs);n.renderer=r.getSVG(t,n.viewport).then((function(e){n.setState({svg:e},n.onRenderSuccess)})).catch(n.onRenderError)})).catch(n.onRenderError)})),(0,d.default)((0,f.default)((0,f.default)(n)),"drawPageOnContainer",(function(e){var t=n.state.svg;if(e&&t){e.firstElementChild||e.appendChild(t);var r=n.viewport,a=r.width,o=r.height;t.setAttribute("width",a),t.setAttribute("height",o)}})),n}return(0,l.default)(t,e),(0,u.default)(t,[{key:"componentDidMount",value:function(){this.renderSVG()}},{key:"render",value:function(){var e=this,t=this.viewport,n=t.width,r=t.height;return p.default.createElement("div",{className:"react-pdf__Page__svg",style:{display:"block",backgroundColor:"white",overflow:"hidden",width:n,height:r,userSelect:"none"},ref:function(t){return e.drawPageOnContainer(t)}})}},{key:"viewport",get:function(){var e=this.props,t=e.page,n=e.rotate,r=e.scale;return t.getViewport({scale:r,rotation:n})}}]),t}(p.PureComponent);t.PageSVGInternal=b,b.propTypes={onRenderError:h.default.func,onRenderSuccess:h.default.func,page:y.isPage.isRequired,rotate:y.isRotate,scale:h.default.number}},function(e,t,n){"use strict";var r=n(9),a=n(1);Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return v.default.createElement(m.default.Consumer,null,(function(t){return v.default.createElement(x,(0,o.default)({},t,e))}))},t.TextLayerInternal=void 0;var o=a(n(10)),i=a(n(16)),u=a(n(17)),c=a(n(5)),s=a(n(11)),l=a(n(6)),f=a(n(2)),d=a(n(8)),p=a(n(7)),h=a(n(4)),v=r(n(0)),g=a(n(3)),m=a(n(15)),y=a(n(52)),b=n(12),w=n(13),x=function(e){function t(){var e,n;(0,c.default)(this,t);for(var r=arguments.length,a=new Array(r),o=0;o<r;o++)a[o]=arguments[o];return n=(0,l.default)(this,(e=(0,f.default)(t)).call.apply(e,[this].concat(a))),(0,h.default)((0,p.default)((0,p.default)(n)),"state",{textItems:null}),(0,h.default)((0,p.default)((0,p.default)(n)),"loadTextItems",(0,u.default)(i.default.mark((function e(){var t,r,a,o;return i.default.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t=n.props.page,e.prev=1,r=(0,b.makeCancellable)(t.getTextContent()),n.runningTask=r,e.next=6,r.promise;case 6:a=e.sent,o=a.items,n.setState({textItems:o},n.onLoadSuccess),e.next=14;break;case 11:e.prev=11,e.t0=e.catch(1),n.onLoadError(e.t0);case 14:case"end":return e.stop()}}),e,this,[[1,11]])})))),(0,h.default)((0,p.default)((0,p.default)(n)),"onLoadSuccess",(function(){var e=n.props.onGetTextSuccess,t=n.state.textItems;(0,b.callIfDefined)(e,t)})),(0,h.default)((0,p.default)((0,p.default)(n)),"onLoadError",(function(e){if(!(0,b.isCancelException)(e)){n.setState({textItems:!1}),(0,b.errorOnDev)(e);var t=n.props.onGetTextError;(0,b.callIfDefined)(t,e)}})),n}return(0,d.default)(t,e),(0,s.default)(t,[{key:"componentDidMount",value:function(){if(!this.props.page)throw new Error("Attempted to load page text content, but no page was specified.");this.loadTextItems()}},{key:"componentDidUpdate",value:function(e){var t=this.props.page;e.page&&t!==e.page&&this.loadTextItems()}},{key:"componentWillUnmount",value:function(){(0,b.cancelRunningTask)(this.runningTask)}},{key:"renderTextItems",value:function(){var e=this.state.textItems;return e?e.map((function(e,t){return v.default.createElement(y.default,(0,o.default)({key:t,itemIndex:t},e))})):null}},{key:"render",value:function(){var e=this.unrotatedViewport,t=this.rotate;return v.default.createElement("div",{className:"react-pdf__Page__textContent",style:{position:"absolute",top:"50%",left:"50%",width:"".concat(e.width,"px"),height:"".concat(e.height,"px"),color:"transparent",transform:"translate(-50%, -50%) rotate(".concat(t,"deg)"),pointerEvents:"none"}},this.renderTextItems())}},{key:"unrotatedViewport",get:function(){var e=this.props,t=e.page,n=e.scale;return t.getViewport({scale:n})}},{key:"rotate",get:function(){var e=this.props,t=e.page;return e.rotate-t.rotate}}]),t}(v.PureComponent);t.TextLayerInternal=x,x.propTypes={onGetTextError:g.default.func,onGetTextSuccess:g.default.func,page:w.isPage.isRequired,rotate:w.isRotate,scale:g.default.number}},function(e,t,n){"use strict";var r=n(9),a=n(1);Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return g.default.createElement(y.default.Consumer,null,(function(t){return g.default.createElement(w,(0,o.default)({},t,e))}))},t.TextLayerItemInternal=void 0;var o=a(n(10)),i=a(n(53)),u=a(n(16)),c=a(n(17)),s=a(n(5)),l=a(n(11)),f=a(n(6)),d=a(n(2)),p=a(n(8)),h=a(n(7)),v=a(n(4)),g=r(n(0)),m=a(n(3)),y=a(n(15)),b=n(13),w=function(e){function t(){var e,n;(0,s.default)(this,t);for(var r=arguments.length,a=new Array(r),o=0;o<r;o++)a[o]=arguments[o];return n=(0,f.default)(this,(e=(0,d.default)(t)).call.apply(e,[this].concat(a))),(0,v.default)((0,h.default)((0,h.default)(n)),"getElementWidth",(function(e){var t=(0,h.default)((0,h.default)(n)).sideways;return e.getBoundingClientRect()[t?"height":"width"]})),n}var n,r;return(0,p.default)(t,e),(0,l.default)(t,[{key:"componentDidMount",value:function(){this.alignTextItem()}},{key:"componentDidUpdate",value:function(){this.alignTextItem()}},{key:"getFontData",value:(r=(0,c.default)(u.default.mark((function e(t){var n,r;return u.default.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n=this.props.page,e.next=3,new Promise((function(e){n.commonObjs.get(t,e)}));case 3:return r=e.sent,e.abrupt("return",r);case 5:case"end":return e.stop()}}),e,this)}))),function(e){return r.apply(this,arguments)})},{key:"alignTextItem",value:(n=(0,c.default)(u.default.mark((function e(){var t,n,r,a,o,i,c,s,l,f,d;return u.default.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(t=this.item){e.next=3;break}return e.abrupt("return");case 3:return t.style.transform="",n=this.props,r=n.fontName,a=n.scale,o=n.width,t.style.fontFamily="".concat(r,", sans-serif"),e.next=8,this.getFontData(r);case 8:i=e.sent,c=i?i.fallbackName:"sans-serif",t.style.fontFamily="".concat(r,", ").concat(c),s=o*a,l=this.getElementWidth(t),f="scaleX(".concat(s/l,")"),(d=i?i.ascent:0)&&(f+=" translateY(".concat(100*(1-d),"%)")),t.style.transform=f;case 17:case"end":return e.stop()}}),e,this)}))),function(){return n.apply(this,arguments)})},{key:"render",value:function(){var e=this,t=this.fontSize,n=this.top,r=this.left,a=this.props,o=a.customTextRenderer,i=a.scale,u=a.str;return g.default.createElement("span",{style:{height:"1em",fontFamily:"sans-serif",fontSize:"".concat(t*i,"px"),position:"absolute",top:"".concat(n*i,"px"),left:"".concat(r*i,"px"),transformOrigin:"left bottom",whiteSpace:"pre",pointerEvents:"all"},ref:function(t){e.item=t}},o?o(this.props):u)}},{key:"unrotatedViewport",get:function(){var e=this.props,t=e.page,n=e.scale;return t.getViewport({scale:n})}},{key:"rotate",get:function(){var e=this.props,t=e.page;return e.rotate-t.rotate}},{key:"sideways",get:function(){return this.rotate%180!=0}},{key:"defaultSideways",get:function(){return this.unrotatedViewport.rotation%180!=0}},{key:"fontSize",get:function(){var e=this.props.transform,t=this.defaultSideways,n=(0,i.default)(e,2),r=n[0],a=n[1];return t?a:r}},{key:"top",get:function(){var e=this.props.transform,t=this.unrotatedViewport,n=this.defaultSideways,r=(0,i.default)(e,6),a=r[2],o=r[3],u=r[4],c=r[5],s=(0,i.default)(t.viewBox,4),l=s[1],f=s[3];return n?u+a+l:f-(c+o)}},{key:"left",get:function(){var e=this.props.transform,t=this.unrotatedViewport,n=this.defaultSideways,r=(0,i.default)(e,6),a=r[4],o=r[5],u=(0,i.default)(t.viewBox,1)[0];return n?o-u:a-u}}]),t}(g.PureComponent);t.TextLayerItemInternal=w,w.propTypes={customTextRenderer:m.default.func,fontName:m.default.string.isRequired,itemIndex:m.default.number.isRequired,page:b.isPage.isRequired,rotate:b.isRotate,scale:m.default.number,str:m.default.string.isRequired,transform:m.default.arrayOf(m.default.number).isRequired,width:m.default.number.isRequired}},function(e,t,n){var r=n(54),a=n(55),o=n(28),i=n(56);e.exports=function(e,t){return r(e)||a(e,t)||o(e,t)||i()}},function(e,t){e.exports=function(e){if(Array.isArray(e))return e}},function(e,t){e.exports=function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,a=!1,o=void 0;try{for(var i,u=e[Symbol.iterator]();!(r=(i=u.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){a=!0,o=e}finally{try{r||null==u.return||u.return()}finally{if(a)throw o}}return n}}},function(e,t){e.exports=function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}},function(e,t,n){"use strict";var r=n(9),a=n(1);Object.defineProperty(t,"__esModule",{value:!0}),t.default=t.AnnotationLayerInternal=void 0;var o=a(n(10)),i=a(n(16)),u=a(n(17)),c=a(n(5)),s=a(n(11)),l=a(n(6)),f=a(n(2)),d=a(n(8)),p=a(n(7)),h=a(n(4)),v=r(n(0)),g=a(n(3)),m=a(n(21)),y=a(n(22)),b=a(n(15)),w=n(12),x=n(13),E=function(e){function t(){var e,n;(0,c.default)(this,t);for(var r=arguments.length,a=new Array(r),o=0;o<r;o++)a[o]=arguments[o];return n=(0,l.default)(this,(e=(0,f.default)(t)).call.apply(e,[this].concat(a))),(0,h.default)((0,p.default)((0,p.default)(n)),"state",{annotations:null}),(0,h.default)((0,p.default)((0,p.default)(n)),"loadAnnotations",(0,u.default)(i.default.mark((function e(){var t,r,a;return i.default.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t=n.props.page,e.prev=1,r=(0,w.makeCancellable)(t.getAnnotations()),n.runningTask=r,e.next=6,r.promise;case 6:a=e.sent,n.setState({annotations:a},n.onLoadSuccess),e.next=13;break;case 10:e.prev=10,e.t0=e.catch(1),n.onLoadError(e.t0);case 13:case"end":return e.stop()}}),e,this,[[1,10]])})))),(0,h.default)((0,p.default)((0,p.default)(n)),"onLoadSuccess",(function(){var e=n.props.onGetAnnotationsSuccess,t=n.state.annotations;(0,w.callIfDefined)(e,t)})),(0,h.default)((0,p.default)((0,p.default)(n)),"onLoadError",(function(e){if(!(0,w.isCancelException)(e)){n.setState({annotations:!1}),(0,w.errorOnDev)(e);var t=n.props.onGetAnnotationsError;(0,w.callIfDefined)(t,e)}})),(0,h.default)((0,p.default)((0,p.default)(n)),"onRenderSuccess",(function(){var e=n.props.onRenderAnnotationLayerSuccess;(0,w.callIfDefined)(e)})),(0,h.default)((0,p.default)((0,p.default)(n)),"onRenderError",(function(e){if(!(0,w.isCancelException)(e)){(0,w.errorOnDev)(e);var t=n.props.onRenderAnnotationLayerError;(0,w.callIfDefined)(t,e)}})),n}return(0,d.default)(t,e),(0,s.default)(t,[{key:"componentDidMount",value:function(){if(!this.props.page)throw new Error("Attempted to load page annotations, but no page was specified.");this.loadAnnotations()}},{key:"componentDidUpdate",value:function(e){var t=this.props,n=t.page,r=t.renderInteractiveForms;(e.page&&n!==e.page||r!==e.renderInteractiveForms)&&this.loadAnnotations()}},{key:"componentWillUnmount",value:function(){(0,w.cancelRunningTask)(this.runningTask)}},{key:"renderAnnotationLayer",value:function(){var e=this.state.annotations;if(e){var t=this.props,n=t.linkService,r=t.page,a=t.renderInteractiveForms,o=this.viewport.clone({dontFlip:!0}),i={annotations:e,div:this.annotationLayer,linkService:n,page:r,renderInteractiveForms:a,viewport:o};this.annotationLayer.innerHTML="";try{m.default.AnnotationLayer.render(i),this.onRenderSuccess()}catch(e){this.onRenderError(e)}}}},{key:"render",value:function(){var e=this;return v.default.createElement("div",{className:"react-pdf__Page__annotations annotationLayer",ref:function(t){e.annotationLayer=t}},this.renderAnnotationLayer())}},{key:"viewport",get:function(){var e=this.props,t=e.page,n=e.rotate,r=e.scale;return t.getViewport({scale:r,rotation:n})}}]),t}(v.PureComponent);t.AnnotationLayerInternal=E,E.propTypes={linkService:x.isLinkService.isRequired,onGetAnnotationsError:g.default.func,onGetAnnotationsSuccess:g.default.func,onRenderAnnotationLayerError:g.default.func,onRenderAnnotationLayerSuccess:g.default.func,page:x.isPage,renderInteractiveForms:g.default.bool,rotate:x.isRotate,scale:g.default.number};var _=function(e){return v.default.createElement(y.default.Consumer,null,(function(t){return v.default.createElement(b.default.Consumer,null,(function(n){return v.default.createElement(E,(0,o.default)({},t,n,e))}))}))};t.default=_},function(e,t){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t,n){(function(t){(function(){var n,r,a,o,i,u;"undefined"!=typeof performance&&null!==performance&&performance.now?e.exports=function(){return performance.now()}:null!=t&&t.hrtime?(e.exports=function(){return(n()-i)/1e6},r=t.hrtime,o=(n=function(){var e;return 1e9*(e=r())[0]+e[1]})(),u=1e9*t.uptime(),i=o-u):Date.now?(e.exports=function(){return Date.now()-a},a=Date.now()):(e.exports=function(){return(new Date).getTime()-a},a=(new Date).getTime())}).call(this)}).call(this,n(60))},function(e,t){var n,r,a=e.exports={};function o(){throw new Error("setTimeout has not been defined")}function i(){throw new Error("clearTimeout has not been defined")}function u(e){if(n===setTimeout)return setTimeout(e,0);if((n===o||!n)&&setTimeout)return n=setTimeout,setTimeout(e,0);try{return n(e,0)}catch(t){try{return n.call(null,e,0)}catch(t){return n.call(this,e,0)}}}!function(){try{n="function"==typeof setTimeout?setTimeout:o}catch(e){n=o}try{r="function"==typeof clearTimeout?clearTimeout:i}catch(e){r=i}}();var c,s=[],l=!1,f=-1;function d(){l&&c&&(l=!1,c.length?s=c.concat(s):f=-1,s.length&&p())}function p(){if(!l){var e=u(d);l=!0;for(var t=s.length;t;){for(c=s,s=[];++f<t;)c&&c[f].run();f=-1,t=s.length}c=null,l=!1,function(e){if(r===clearTimeout)return clearTimeout(e);if((r===i||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(e);try{r(e)}catch(t){try{return r.call(null,e)}catch(t){return r.call(this,e)}}}(e)}}function h(e,t){this.fun=e,this.array=t}function v(){}a.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];s.push(new h(e,t)),1!==s.length||l||u(p)},h.prototype.run=function(){this.fun.apply(null,this.array)},a.title="browser",a.browser=!0,a.env={},a.argv=[],a.version="",a.versions={},a.on=v,a.addListener=v,a.once=v,a.off=v,a.removeListener=v,a.removeAllListeners=v,a.emit=v,a.prependListener=v,a.prependOnceListener=v,a.listeners=function(e){return[]},a.binding=function(e){throw new Error("process.binding is not supported")},a.cwd=function(){return"/"},a.chdir=function(e){throw new Error("process.chdir is not supported")},a.umask=function(){return 0}},function(e,t,n){var r=n(62),a=n(63);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[e.i,a,""]]);var o={insert:"head",singleton:!1},i=(r(e.i,a,o),a.locals?a.locals:{});e.exports=i},function(e,t,n){"use strict";var r,a=function(){return void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r},o=function(){var e={};return function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}e[t]=n}return e[t]}}(),i={};function u(e,t,n){for(var r=0;r<t.length;r++){var a={css:t[r][1],media:t[r][2],sourceMap:t[r][3]};i[e][r]?i[e][r](a):i[e].push(v(a,n))}}function c(e){var t=document.createElement("style"),r=e.attributes||{};if(void 0===r.nonce){var a=n.nc;a&&(r.nonce=a)}if(Object.keys(r).forEach((function(e){t.setAttribute(e,r[e])})),"function"==typeof e.insert)e.insert(t);else{var i=o(e.insert||"head");if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(t)}return t}var s,l=(s=[],function(e,t){return s[e]=t,s.filter(Boolean).join("\n")});function f(e,t,n,r){var a=n?"":r.css;if(e.styleSheet)e.styleSheet.cssText=l(t,a);else{var o=document.createTextNode(a),i=e.childNodes;i[t]&&e.removeChild(i[t]),i.length?e.insertBefore(o,i[t]):e.appendChild(o)}}function d(e,t,n){var r=n.css,a=n.media,o=n.sourceMap;if(a?e.setAttribute("media",a):e.removeAttribute("media"),o&&btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleSheet)e.styleSheet.cssText=r;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(r))}}var p=null,h=0;function v(e,t){var n,r,a;if(t.singleton){var o=h++;n=p||(p=c(t)),r=f.bind(null,n,o,!1),a=f.bind(null,n,o,!0)}else n=c(t),r=d.bind(null,n,t),a=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)};return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else a()}}e.exports=function(e,t,n){return(n=n||{}).singleton||"boolean"==typeof n.singleton||(n.singleton=a()),e=n.base?e+n.base:e,t=t||[],i[e]||(i[e]=[]),u(e,t,n),function(t){if(t=t||[],"[object Array]"===Object.prototype.toString.call(t)){i[e]||(i[e]=[]),u(e,t,n);for(var r=t.length;r<i[e].length;r++)i[e][r]();i[e].length=t.length,0===i[e].length&&delete i[e]}}}},function(e,t,n){(t=n(64)(!1)).push([e.i,"body {\n  margin: 0;\n  background-color: #525659;\n  color: #fff;\n  font-family: Helvetica, Arial, sans-serif;\n}\n.Reader {\n  height: 100vh;\n}\n.Reader__container__numbers {\n  position: fixed;\n  top: 0px;\n  width: 100%;\n  margin: auto;\n  padding: 5px;\n  background-color: #565759;\n  z-index: 100;\n}\n.Reader__container__numbers__content {\n  font-size: 0.65rem;\n  text-align: center;\n  padding: 5px;\n  border-radius: 4px;\n  background-color: rgba(255, 255, 255, 0.144);\n  width: 50px;\n  margin: auto;\n}\n.Reader__container__navigate {\n  position: fixed;\n  bottom: 0px;\n  width: 100%;\n  margin: auto;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  z-index: 100;\n  background-color: #405a65;\n}\n.Reader__container__navigate__arrow {\n  font-size: 2.5em;\n  margin: 10px;\n  width: 100px;\n  margin: auto;\n  text-align: center;\n}\n.Reader__container__zoom_container {\n  position: fixed;\n  bottom: 60px;\n  right: 15px;\n  background-color: rgba(0, 0, 0, 0.9);\n  z-index: 101;\n  flex: 1;\n  justify-content: center;\n}\n.Reader__container__zoom_container__button {\n  font-size: 2.5em;\n  margin: 5;\n  width: 50px;\n  text-align: center;\n}\n.Reader__container__load {\n  margin-top: 1em;\n  color: white;\n}\n.Reader__container__document {\n  margin: auto;\n  padding-top: 40px;\n  padding-bottom: 50px;\n}\n.Reader__container__document .react-pdf__Document span {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n.Reader__container__document .react-pdf__Page {\n  display: block;\n}\n.Reader__container__document .react-pdf__Page canvas {\n  margin: auto;\n}\n.Reader__container__document .react-pdf__Page__annotations {\n  display: none;\n}\n",""]),e.exports=t},function(e,t,n){"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n=function(e,t){var n=e[1]||"",r=e[3];if(!r)return n;if(t&&"function"==typeof btoa){var a=(i=r,u=btoa(unescape(encodeURIComponent(JSON.stringify(i)))),c="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(u),"/*# ".concat(c," */")),o=r.sources.map((function(e){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(e," */")}));return[n].concat(o).concat([a]).join("\n")}var i,u,c;return[n].join("\n")}(t,e);return t[2]?"@media ".concat(t[2]," {").concat(n,"}"):n})).join("")},t.i=function(e,n){"string"==typeof e&&(e=[[null,e,""]]);for(var r=0;r<e.length;r++){var a=[].concat(e[r]);n&&(a[2]?a[2]="".concat(n," and ").concat(a[2]):a[2]=n),t.push(a)}},t}},function(e,t,n){"use strict";n.r(t);var r=n(0),a=n(29),o=n(30),i=n.n(o),u=n(31),c=n.n(u),s=n(14),l=n.n(s),f=()=>r.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"24",height:"24",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round",className:"feather feather-arrow-down"},r.createElement("line",{x1:"12",y1:"5",x2:"12",y2:"19"}),r.createElement("polyline",{points:"19 12 12 19 5 12"})),d=()=>r.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"24",height:"24",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round",className:""},r.createElement("polyline",{points:"5 12 19 12"}),r.createElement("polyline",{points:"12 5 12 19"})),p=()=>r.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"24",height:"24",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round",className:""},r.createElement("line",{x1:"5",y1:"12",x2:"19",y2:"12"})),h=()=>r.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"24",height:"24",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round",className:"feather feather-arrow-up"},r.createElement("line",{x1:"12",y1:"19",x2:"12",y2:"5"}),r.createElement("polyline",{points:"5 12 12 5 19 12"}));n(61);const v=document.querySelector("#react-container"),g={cMapUrl:"//cdn.jsdelivr.net/npm/pdfjs-dist@2.1.266/cmaps/",cMapPacked:!0};class m extends r.Component{constructor(){super(...arguments),this.state={numPages:null,currentPage:1,ready:!0,pageLoaded:!1,scale:1,error:void 0},this.MAX_SCALE=4,this.__zoomEvent=!1,this.onDocumentLoadSuccess=({numPages:e})=>{this.setState({numPages:e})},this.onError=e=>{console.error(e),this.setState({error:e})},this.zoomOut=e=>{e.preventDefault(),this.__zoomEvent||l()(this.zOut)},this.zoomIn=e=>{e.preventDefault(),this.__zoomEvent||l()(this.zIn)},this.zIn=()=>{this.state.scale<=this.MAX_SCALE-.25&&(this.__zoomEvent=!0,this.setState(e=>({scale:e.scale+.25})))},this.zOut=()=>{this.state.scale>=.75&&(this.__zoomEvent=!0,this.setState(e=>({scale:e.scale-.25})))},this.up=()=>{const{currentPage:e}=this.state;if(e>1){const t=e-1;this.setState({currentPage:t})}Object(s.cancel)(this.up)},this.down=()=>{const{currentPage:e,numPages:t}=this.state;if(e<t){const t=e+1;this.setState({currentPage:t})}Object(s.cancel)(this.down)},this.goUp=e=>{e.preventDefault(),l()(this.up)},this.goDown=e=>{e.preventDefault(),l()(this.down)},this.renderPage=e=>r.createElement(c.a,{loading:" ",key:"page_"+e,pageNumber:e,onLoadError:this.onError,onRenderError:this.onError,onGetTextError:this.onError,onGetAnnotationsError:this.onError,width:(document.body.clientWidth*E||90)/100,onRenderSuccess:()=>{this.__zoomEvent=!1},scale:this.state.scale}),this.renderPages=()=>Array.from(Array(this.state.numPages).keys()).map(e=>r.createElement("div",{key:"page-"+e.toString(),style:{marginBottom:"number"==typeof x?x:10}},this.renderPage(e+1)))}static getDerivedStateFromError(e){return{error:e}}render(){var e,t,n,a,o,u,c,s,l,v;const{numPages:m,currentPage:b,error:x}=this.state,{customStyle:E}=this.props;return x?r.createElement("p",null,x.message?x.message:"Sorry an error occurred!"):r.createElement("div",{className:"Reader"},r.createElement("div",{className:"Reader__container",style:null===(e=E)||void 0===e?void 0:e.readerContainer},r.createElement("div",{className:"Reader__container__document",style:null===(t=E)||void 0===t?void 0:t.readerContainerDocument},r.createElement(i.a,Object.assign({loading:" ",onLoadSuccess:this.onDocumentLoadSuccess,onLoadError:this.onError,onSourceError:this.onError},{options:g,file:y}),w?this.renderPages():this.renderPage(b))),m&&!w&&r.createElement("div",{className:"Reader__container__numbers",style:null===(n=E)||void 0===n?void 0:n.readerContainerNumbers},r.createElement("div",{className:"Reader__container__numbers__content",style:null===(a=E)||void 0===a?void 0:a.readerContainerNumbersContent},b," / ",m)),r.createElement("div",{className:"Reader__container__zoom_container",style:null===(o=E)||void 0===o?void 0:o.readerContainerZoomContainer},r.createElement("div",{className:"Reader__container__zoom_container__button",style:null===(u=E)||void 0===u?void 0:u.readerContainerZoomContainerButton,onClick:this.zoomIn},r.createElement(d,null)),r.createElement("div",{className:"Reader__container__zoom_container__button",style:null===(c=E)||void 0===c?void 0:c.readerContainerZoomContainerButton,onClick:this.zoomOut},r.createElement(p,null))),m>1&&!w&&r.createElement("div",{className:"Reader__container__navigate",style:null===(s=E)||void 0===s?void 0:s.readerContainerNavigate},r.createElement("div",{className:"Reader__container__navigate__arrow",style:Object.assign(Object.assign({},1===b?{color:"rgba(255,255,255,0.4)"}:{}),null===(l=E)||void 0===l?void 0:l.readerContainerNavigateArrow),onClick:this.goUp},r.createElement(h,null)),r.createElement("div",{className:"Reader__container__navigate__arrow",style:Object.assign(Object.assign({},b===m?{color:"rgba(255,255,255,0.4)"}:{}),null===(v=E)||void 0===v?void 0:v.readerContainerNavigateArrow),onClick:this.goDown},r.createElement(f,null)))))}}const y=document.querySelector("#file").getAttribute("data-file"),b=window.CUSTOM_STYLE,w=window.WITH_SCROLL,x=window.PAGE_PADDING_BOTTOM,E=window.PAGE_HORIZONTAL_SCALE;Object(a.render)(r.createElement(m,Object.assign({},{file:y,customStyle:b,withScroll:w})),v)}]);';
export function getBundle() {
  return Base64.decode(bundle)
}
export function getBundleMd5() {
  return '6fd94cc65831129a52689dd73853ebae'
}
